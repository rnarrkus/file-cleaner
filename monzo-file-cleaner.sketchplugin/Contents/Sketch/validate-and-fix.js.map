{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/artboards.js","webpack://exports/./src/cmd/validate-and-fix.js","webpack://exports/./src/utils.js","webpack://exports/./src/validators.js","webpack://exports/./src/wip-rows.js","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"sketch/ui\""],"names":["artboardsByName","page","artboards","i","length","name","String","artboardRowsByName","rows","number","parseInt","match","rowName","row","push","sort","a","b","frame","x","artboardRowsByPosition","rowCovers","y","toString","yPositions","Object","entries","map","artboard","includes","yPos","closestRow","smallestDist","Infinity","rowYPos","yDist","Math","abs","values","forEach","autoAlignArtboards","rowNames","keys","nextYOffset","sequenceNumber","parent","parentGroup","removeFromParent","insertLayer_atIndex","artboardNumber","absoluteRect","rulerX","rulerY","height","autoAlignArtboardsBig","validateAndFix","context","result","success","UI","message","master","markWipRows","getMasterPage","pages","document","colorFromString","color","MSImmutableColor","colorWithSVGString","newMutableCounterpart","validators","validateMasterPresence","validatePageNames","validateArtboardNames","validateAll","validator","allowedNames","indexOf","wipSymbolRegex","defaultArtboardColor","wipArtboardColor","wipRows","findWipRows","rowNumber","backgroundColor","fuzzyIsEqual","symbolMaster","fromNative","getSymbols","find","s","console","log","getAllInstances","instance","type","sketchObject","parentPage","boardNumber"],"mappings":"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","file":"validate-and-fix.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/cmd/validate-and-fix.js\");\n","import { getMasterPage } from \"./utils\";\nimport { validateAll } from \"./validators\";\n\nexport function artboardsByName(page) {\n  const artboards = page.artboards();\n  const artboardsByName = {};\n  for (let i = 0; i < artboards.length; i++) {\n    const name = String(artboards[i].name());\n    artboardsByName[name] = artboards[i];\n  }\n\n  return artboardsByName;\n}\n\nexport function artboardRowsByName(page) {\n  const artboards = page.artboards();\n  const rows = {};\n  for (let i = 0; i < artboards.length; i++) {\n    const name = String(artboards[i].name());\n    const number = parseInt(name.match(/\\d+/)[0], 10);\n    const rowName = String(number - (number % 100));\n    const row = rows[rowName] || [];\n    row.push(artboards[i]);\n    rows[rowName] = row.sort((a, b) => a.frame().x() - b.frame().x());\n  }\n  return rows;\n}\n\nexport function artboardRowsByPosition(page) {\n  const artboards = page.artboards();\n\n  // Find the row covers\n  const rowCovers = [];\n  for (let i = 0; i < artboards.length; i++) {\n    const number = parseInt(artboards[i].name(), 10);\n    if (number % 100 === 0) {\n      rowCovers.push(artboards[i]);\n    }\n  }\n\n  // Sort the existing covers\n  rowCovers.sort((a, b) => a.frame().y() - b.frame().y());\n\n  // Build up the rows, starting with their covers\n  const rows = {};\n  for (let i = 0; i < rowCovers.length; i++) {\n    const rowName = ((i + 1) * 100).toString();\n    rows[rowName] = [rowCovers[i]];\n  }\n  const yPositions = Object.entries(rows).map(([name, row]) => [\n    name,\n    row[0].frame().y()\n  ]);\n\n  // Add other artboards into the rows\n  for (let i = 0; i < artboards.length; i++) {\n    const artboard = artboards[i];\n\n    // Skip row covers, obvs...\n    if (rowCovers.includes(artboard)) {\n      continue;\n    }\n\n    const yPos = artboard.frame().y();\n\n    let closestRow;\n    let smallestDist = Infinity;\n    for (const [rowName, rowYPos] of yPositions) {\n      const yDist = Math.abs(yPos - rowYPos);\n      if (yDist < smallestDist) {\n        closestRow = rowName;\n        smallestDist = yDist;\n      }\n    }\n\n    rows[closestRow].push(artboards[i]);\n  }\n\n  // Sort rows by board x position\n  Object.values(rows).forEach(row =>\n    row.sort((a, b) => a.frame().x() - b.frame().x())\n  );\n  return rows;\n}\n\nexport function autoAlignArtboards(page) {\n  const rows = artboardRowsByPosition(page);\n\n  const rowNames = Object.keys(rows).sort(\n    (a, b) => parseInt(a, 10) - parseInt(b, 10)\n  );\n  let y = 0;\n  for (let rowName of rowNames) {\n    const row = rows[rowName];\n    let x = 0;\n    let nextYOffset = 1000;\n    let sequenceNumber = 0;\n\n    for (let artboard of row) {\n      // Make sure they're in the right order, so the list on the left is sorted\n      const parent = artboard.parentGroup();\n      artboard.removeFromParent();\n      parent.insertLayer_atIndex(artboard, 0);\n\n      // Update name\n      const artboardNumber = parseInt(rowName, 10) + sequenceNumber;\n      artboard.name = artboardNumber.toString();\n\n      // Update artboard's position\n      // artboard.frame().{x,y}() isn't always relatively to (0,0), and using\n      // absoluteRect.ruler{X,Y} seems to solve this\n      artboard.absoluteRect().rulerX = x;\n      artboard.absoluteRect().rulerY = y;\n\n      // Use the height of the largest artboard on this row to determine the\n      // y-offset of the next row (plus a small buffer for labels)\n      const height = artboard.frame().height() + 100;\n      if (height > nextYOffset) {\n        // Snap to a 500 unit grid\n        nextYOffset = height + (500 - (height % 500));\n      }\n\n      x += 500;\n      sequenceNumber++;\n    }\n    y += nextYOffset;\n  }\n}\n\nexport function autoAlignArtboardsBig(page) {\n  const rows = artboardRowsByPosition(page);\n\n  const rowNames = Object.keys(rows).sort(\n    (a, b) => parseInt(a, 10) - parseInt(b, 10)\n  );\n  let y = 0;\n  for (let rowName of rowNames) {\n    const row = rows[rowName];\n    let x = 0;\n    let nextYOffset = 1000;\n    let sequenceNumber = 0;\n\n    for (let artboard of row) {\n      // Make sure they're in the right order, so the list on the left is sorted\n      const parent = artboard.parentGroup();\n      artboard.removeFromParent();\n      parent.insertLayer_atIndex(artboard, 0);\n\n      // Update name\n      const artboardNumber = parseInt(rowName, 10) + sequenceNumber;\n      artboard.name = artboardNumber.toString();\n\n      // Update artboard's position\n      // artboard.frame().{x,y}() isn't always relatively to (0,0), and using\n      // absoluteRect.ruler{X,Y} seems to solve this\n      artboard.absoluteRect().rulerX = x;\n      artboard.absoluteRect().rulerY = y;\n\n      // Use the height of the largest artboard on this row to determine the\n      // y-offset of the next row (plus a small buffer for labels)\n      const height = artboard.frame().height() + 100;\n      if (height > nextYOffset) {\n        // Snap to a 2000 unit grid\n        nextYOffset = height + (1640 - (height % 1640));\n      }\n\n      x += 1640;\n      sequenceNumber++;\n    }\n    y += nextYOffset;\n  }\n}\n","import UI from \"sketch/ui\";\nimport { getMasterPage } from \"../utils\";\nimport { validateAll } from \"../validators\";\nimport { autoAlignArtboards } from \"../artboards\";\nimport { markWipRows } from \"../wip-rows\";\n\nexport default function validateAndFix(context) {\n  const result = validateAll(context);\n  if (!result.success) {\n    UI.message(`‼️ ${result.message}`);\n    return;\n  }\n\n  const master = getMasterPage(context);\n\n  // Fix artboard alignment on the Master page\n  autoAlignArtboards(master);\n\n  // Colour the backgrounds of rows with WIP symbols\n  markWipRows(context, master);\n}\n","export function getMasterPage(context) {\n  const pages = context.document.pages();\n  for (let i = 0; i < pages.length; i++) {\n    if (pages[i].name() == \"Master\") {\n      return pages[i];\n    }\n  }\n  return null;\n}\n\nexport function colorFromString(color) {\n  return MSImmutableColor.colorWithSVGString(color).newMutableCounterpart();\n}\n","import { getMasterPage } from \"./utils\";\n\nconst validators = [\n  validateMasterPresence,\n  validatePageNames,\n  validateArtboardNames\n];\nexport default validators;\n\nexport function validateAll(context) {\n  for (let validator of validators) {\n    const result = validator(context);\n    if (!result.success) {\n      return result;\n    }\n  }\n  return { success: true };\n}\n\nexport function validateMasterPresence(context) {\n  if (!getMasterPage(context)) {\n    return { success: false, message: \"Missing page 'Master'\" };\n  }\n  return { success: true };\n}\n\nexport function validatePageNames(context) {\n  const allowedNames = [\"Master\", \"Symbols\"];\n  const pages = context.document.pages();\n  for (let i = 0; i < pages.length; i++) {\n    const name = String(pages[i].name());\n    if (allowedNames.indexOf(name) === -1) {\n      return { success: false, message: `Invalid page name '${name}'` };\n    }\n  }\n  return { success: true };\n}\n\nexport function validateArtboardNames(context) {\n  const master = getMasterPage(context);\n  const artboards = master.artboards();\n  const artboardsByName = {};\n  for (let i = 0; i < artboards.length; i++) {\n    const name = String(artboards[i].name());\n    if (artboardsByName[name]) {\n      return { success: false, message: `Duplicate artboard name '${name}'` };\n    }\n    artboardsByName[name] = name;\n\n    if (!name.match(/^\\d{3,4}(\\.[A-Z]{1,2})?/)) {\n      return { success: false, message: `Invalid artboard name '${name}'` };\n    }\n  }\n  return { success: true };\n}\n","import { Document } from \"sketch/dom\";\nimport { artboardRowsByName } from \"./artboards\";\nimport { colorFromString } from \"./utils\";\n\nconst wipSymbolRegex = /\\bWIP$/;\nconst defaultArtboardColor = colorFromString(\"#000000\");\nconst wipArtboardColor = colorFromString(\"#F43951\");\n\nexport function markWipRows(context, page) {\n  const wipRows = findWipRows(context, page);\n  const rows = artboardRowsByName(page);\n  for (let rowNumber of Object.keys(rows)) {\n    const artboard = rows[rowNumber][0];\n    if (wipRows.includes(rowNumber)) {\n      artboard.backgroundColor = wipArtboardColor;\n    } else {\n      // This conditional prevents us from e.g. changing green \"approved\"\n      // artboards back to black\n      if (artboard.backgroundColor().fuzzyIsEqual(wipArtboardColor)) {\n        artboard.backgroundColor = defaultArtboardColor;\n      }\n    }\n  }\n}\n\nexport function findWipRows(context, page) {\n  const symbolMaster = Document.fromNative(context.document)\n    .getSymbols()\n    .find(s => s.name.match(wipSymbolRegex));\n\n  if (!symbolMaster) {\n    console.log(\"Couldn't find WIP symbol\");\n    return [];\n  }\n\n  const wipRows = [];\n  for (let instance of symbolMaster.getAllInstances()) {\n    while (instance && instance.type != \"Artboard\") {\n      instance = instance.parent;\n    }\n\n    if (instance && instance.sketchObject.parentPage() == page) {\n      const boardNumber = parseInt(instance.name, 10);\n      const rowName = (boardNumber - (boardNumber % 100)).toString();\n      if (wipRows.indexOf(rowName) === -1) {\n        wipRows.push(rowName);\n      }\n    }\n  }\n  return wipRows;\n}\n","module.exports = require(\"sketch/dom\");","module.exports = require(\"sketch/ui\");"],"sourceRoot":""}